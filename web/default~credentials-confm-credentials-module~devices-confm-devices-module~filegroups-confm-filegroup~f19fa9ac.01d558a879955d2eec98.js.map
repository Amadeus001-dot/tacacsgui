{"version":3,"sources":["webpack:///./src/app/views/pages/confmanager/settings/confmanager-settings.module.ts","webpack:///./src/app/views/pages/confmanager/settings/main/main.component.html","webpack:///./src/app/views/pages/confmanager/settings/main/main.component.scss","webpack:///./src/app/views/pages/confmanager/settings/main/main.component.ts","webpack:///./src/app/views/pages/confmanager/settings/main/main.service.ts"],"names":[],"mappings":"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","file":"default~credentials-confm-credentials-module~devices-confm-devices-module~filegroups-confm-filegroup~f19fa9ac.01d558a879955d2eec98.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n// NgBootstrap\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n//Page Module\nimport { PagesModule } from '../../../pages/pages.module'\n\nimport { ConfmanagerModule } from '../../../partials/layout/tacgui/_forms/confmanager/confmanager.module'\n\n// import { QueriesComponent } from './queries/queries.component';\n// import { DevicesComponent } from './devices/devices.component';\n// import { ModelsComponent } from './models/models.component';\n// import { CredentialsComponent } from './credentials/credentials.component';\n// import { FilegroupsComponent } from './filegroups/filegroups.component';\nimport { MainComponent } from './main/main.component';\n\n@NgModule({\n  declarations: [\n    // QueriesComponent,\n    // DevicesComponent,\n    // ModelsComponent,\n    // CredentialsComponent,\n    // FilegroupsComponent,\n    MainComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PagesModule,\n    ConfmanagerModule,\n    NgbModule,\n    RouterModule.forChild([\n      {\n        path: 'queries',\n        loadChildren: './queries/confm-queries.module#ConfmQueriesModule'\n      },\n      {\n        path: 'devices',\n        loadChildren: './devices/confm-devices.module#ConfmDevicesModule'\n      },\n      {\n        path: 'models',\n        loadChildren: './models/confm-models.module#ConfmModelsModule'\n      },\n      {\n        path: 'credentials',\n        loadChildren: './credentials/confm-credentials.module#ConfmCredentialsModule'\n      },\n      {\n        path: 'filegroups',\n        loadChildren: './filegroups/confm-filegroups.module#ConfmFilegroupsModule'\n      },\n      {\n        path: 'main',\n        component: MainComponent\n      },\n    ]),\n  ],\n  exports: [\n    ConfmanagerModule\n  ]\n})\nexport class ConfmanagerSettingsModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4>Start/Stop/Reload Configuration Manager</h4>\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-8\\\">\\n            <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"...\\\">\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"toogle('start')\\\"\\n                  class=\\\"btn btn-outline-info\\\" ngbPopover=\\\"Start\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-play\\\"></i>\\n                </button>\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"toogle('stop')\\\"\\n                  class=\\\"btn btn-outline-info\\\" ngbPopover=\\\"Stop\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-stop\\\"></i>\\n                </button>\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"getInfo()\\\"\\n                  class=\\\"btn btn-outline-info\\\" ngbPopover=\\\"Info\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-info\\\"></i>\\n                </button>\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"toogle('force')\\\"\\n                  class=\\\"btn btn-outline-info\\\" ngbPopover=\\\"Force Start\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-rocket\\\"></i>\\n                </button>\\n            </div>\\n          </div>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <label>Current Status</label>\\n            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [value]=\\\"( currentStatus | async )\\\" disabled>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4>Cron Settings</h4>\\n        <div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n\\t\\t\\t\\t\\t<label>Configuration Manager Start</label>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n            <div class=\\\"kt-radio-list\\\">\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"kt-radio kt-radio--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\" name=\\\"radio1\\\" value=\\\"day\\\" [(ngModel)]=\\\"cm.period\\\"> Every day\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"kt-radio kt-radio--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"radio\\\" name=\\\"radio1\\\"  value=\\\"week\\\" [(ngModel)]=\\\"cm.period\\\"> Every Week\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"radio\\\">\\n\\t\\t\\t\\t\\t\\t  <label><input type=\\\"radio\\\" name=\\\"cm_period\\\" value=\\\"day\\\">every day</label>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"radio\\\">\\n\\t\\t\\t\\t\\t\\t  <label><input type=\\\"radio\\\" name=\\\"cm_period\\\" value=\\\"week\\\">every week</label>\\n\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"cm_period_native\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"timeReady | async\\\">\\n\\t\\t\\t\\t        <ngb-timepicker [size]=\\\"small\\\" [minuteStep]=\\\"10\\\" [(ngModel)]=\\\"cm.time\\\"></ngb-timepicker>\\n\\t\\t\\t\\t      </div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"cm.week\\\" [disabled]=\\\"cm.period == 'day'\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"1\\\">Monday</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"2\\\">Tuesday</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"3\\\">Wednesday</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"4\\\">Thursday</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"5\\\">Friday</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"6\\\">Saturday</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<option value=\\\"0\\\">Sunday</option>\\n\\t\\t\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"hidden\\\" name=\\\"week_native\\\">\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<p class=\\\"help-block\\\">select time when to run configuration manager, time to start collecting data</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n\\t\\t\\t\\t\\t<label>Git Commit Start Every</label>\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t\\t\\t\\t<select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"git.period\\\">\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"10\\\">10 minutes</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"20\\\">20 minutes</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"30\\\">30 minutes</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"40\\\">40 minutes</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"50\\\">50 minutes</option>\\n\\t\\t\\t\\t\\t\\t\\t<option value=\\\"60\\\">60 minutes</option>\\n\\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<p class=\\\"help-block\\\">select time when configuration manager will check any changes inside of local files (configurations)</p>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-warning btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Full Configuration Preview</h5>\\n        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-warning\\\" (click)=\\\"showConfig()\\\">Show</button>&nbsp;\\n        <button type=\\\"button\\\" class=\\\"btn btn-default btn-elevate btn-sm\\\"\\n        *ngIf=\\\"(configPreview | async)\\\"\\n        (click)=\\\"configPreview.next('')\\\">Hide</button>\\n        <ng-container *ngIf=\\\"(configPreview | async)\\\">\\n          <hr>\\n          <pre>{{ configPreview | async }}</pre>\\n        </ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2NvbmZtYW5hZ2VyL3NldHRpbmdzL21haW4vbWFpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//Service\nimport { MainService } from './main.service'\n\n@Component({\n  selector: 'kt-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  statusMessage = new BehaviorSubject('')\n  validation = new BehaviorSubject({})\n  cm = {\n    period: \"day\",\n    time: {\n      \"hour\": 1,\n      \"minute\": 0\n    },\n    week: 1\n  }\n  git = {\n    period: 60\n  }\n  timeReady = new BehaviorSubject(false)\n  currentStatus = new BehaviorSubject('Loading...')\n  configPreview = new BehaviorSubject('')\n\n  constructor(\n    private service: MainService,\n    private toastr:ToastrService,\n  ) { }\n\n  ngOnInit() {\n    this.service.cron_get().subscribe( data => {\n      console.log( data )\n      if (data.cm) {\n        this.cm.period = (data.cm.period) ? data.cm.period : this.cm.period\n        this.cm.week = (data.cm.week) ? data.cm.week : this.cm.week\n        data.cm.time = data.cm.time.split(':')\n        this.cm.time.hour = (data.cm.time[0]) ? parseInt(data.cm.time[0]) : this.cm.time.hour\n        this.cm.time.minute = (data.cm.time[1]) ? parseInt(data.cm.time[1]) : this.cm.time.minute\n      }\n      if (data.git)\n        this.git.period = (data.git.period) ? data.git.period : this.git.period\n      console.log(this.cm, this.git)\n      this.timeReady.next(true)\n    })\n    this.getInfo()\n  }\n\n  toogle(action){\n    this.currentStatus.next('Loading...')\n    this.service.toggle({action: action}).subscribe( data => {\n      console.log(data)\n      this.getInfo();\n    })\n  }\n\n  getInfo(){\n    this.currentStatus.next('Loading...')\n    this.service.info().subscribe( data => {\n      console.log( data )\n      this.currentStatus.next(data.info)\n    })\n  }\n\n  showConfig(){\n    this.configPreview.next('Loading...')\n    this.service.preview().subscribe( data => {\n      console.log( data )\n      this.configPreview.next(data.preview)\n    })\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  save(){\n    let cm = this.makeClone(this.cm)\n    cm.time = cm.time.hour + ':' + cm.time.minute\n    this.service.cron_post({cm: cm, git: this.git}).subscribe( data => {\n      console.log( data )\n      if (data.crontab == 'done')\n        this.toastr.success('Settings Saved');\n      else\n        this.toastr.error('Unexpected Error');\n      this.getInfo();\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, first } from 'rxjs/operators';\n\nconst API_URL = 'api/confmanager/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private http: HttpClient) {}\n\n  toggle(params:{}) {\n    return this.http.post<any>(API_URL + 'toggle/', params)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  cron_get() {\n    return this.http.get<any>(API_URL + 'settings/cron/')\n      .pipe(\n        first(),\n        map( (data) => {\n          return data.cron\n        } )\n      )\n  }\n\n  cron_post(params) {\n    return this.http.post<any>(API_URL + 'settings/cron/', params)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  info() {\n    return this.http.get<any>(API_URL + 'info/')\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  preview() {\n    return this.http.get<any>(API_URL + 'settings/preview/')\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n}\n"],"sourceRoot":""}