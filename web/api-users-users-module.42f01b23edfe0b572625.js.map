{"version":3,"sources":["webpack:///./src/app/views/pages/gui/api-users/add/add.component.html","webpack:///./src/app/views/pages/gui/api-users/add/add.component.scss","webpack:///./src/app/views/pages/gui/api-users/add/add.component.ts","webpack:///./src/app/views/pages/gui/api-users/edit/edit.component.html","webpack:///./src/app/views/pages/gui/api-users/edit/edit.component.scss","webpack:///./src/app/views/pages/gui/api-users/edit/edit.component.ts","webpack:///./src/app/views/pages/gui/api-users/user.service.ts","webpack:///./src/app/views/pages/gui/api-users/users.component.html","webpack:///./src/app/views/pages/gui/api-users/users.component.scss","webpack:///./src/app/views/pages/gui/api-users/users.component.ts","webpack:///./src/app/views/pages/gui/api-users/users.module.ts","webpack:///./src/app/views/partials/layout/tacgui/_forms/api-user-form/api-user-form.component.html","webpack:///./src/app/views/partials/layout/tacgui/_forms/api-user-form/api-user-form.component.scss","webpack:///./src/app/views/partials/layout/tacgui/_forms/api-user-form/api-user-form.component.ts"],"names":[],"mappings":"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","file":"api-users-users-module.42f01b23edfe0b572625.js","sourcesContent":["module.exports = \"<kt-api-user-form [options]=\\\"formParameters\\\" [validation]=\\\"validation\\\" [loading]=\\\"loadingForm\\\">\\n</kt-api-user-form>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"add()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Add User</button>&nbsp;\\n    <a routerLink=\\\"..\\\" class=\\\"btn btn-default btn-elevate btn-sm\\\" >Cancel</a>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9hcGktdXNlcnMvYWRkL2FkZC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n//Router\nimport { Router, ActivatedRoute } from '@angular/router';\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n//Model Device\nimport { ApiUser } from '../../../../partials/layout/tacgui/_forms/api-user-form/apiuser.model'\n//Service//\nimport { UserService } from '../user.service'\n\n@Component({\n  selector: 'kt-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddAPIComponent implements OnInit {\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(false)\n\n  formParameters = {\n    action: 'add',\n    data: new ApiUser,\n    old_data: new ApiUser\n  }\n\n  constructor(\n    private toastr:ToastrService,\n    private u_service: UserService,\n    private router:Router,\n    private route: ActivatedRoute\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.formParameters.data.empty()\n    this.formParameters.old_data.empty()\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  add(){\n    this.loadingForm.next(true)\n    console.log(this.formParameters.data)\n\n    let data = this.makeClone(this.formParameters.data)\n    console.log(data)\n    data.group = (data.group[0] && data.group[0].id) ? data.group[0].id : null\n\n    // this.toastr.success('Hello world!', 'Toastr fun!');\n    this.u_service.add(data).subscribe(data => {\n      console.log(data)\n      this.validation.next(data.error.validation)\n      if(data.error.status){\n        this.loadingForm.next(false)\n        return\n      }\n      if (data.user) {\n        this.toastr.success('User Added!');\n        this.router.navigate(['../'], { relativeTo: this.route });\n      } else {\n        this.toastr.error('Unknown server error');\n      }\n      this.loadingForm.next(false)\n    })\n  }\n\n}\n","module.exports = \"<kt-api-user-form [options]=\\\"formParameters\\\" [validation]=\\\"validation\\\" [loading]=\\\"loadingForm\\\">\\n</kt-api-user-form>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Edit User</button>&nbsp;\\n    <a routerLink=\\\"../..\\\" class=\\\"btn btn-default btn-elevate btn-sm\\\" >Cancel</a>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9hcGktdXNlcnMvZWRpdC9lZGl0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n//Router\nimport { Router, ActivatedRoute } from '@angular/router';\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n//Model Device\nimport { ApiUser } from '../../../../partials/layout/tacgui/_forms/api-user-form/apiuser.model'\n//Service//\nimport { UserService } from '../user.service'\n\n@Component({\n  selector: 'kt-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.scss']\n})\nexport class EditAPIComponent implements OnInit {\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(false)\n\n  formParameters = {\n    action: 'add',\n    data: new ApiUser,\n    old_data: new ApiUser\n  }\n\n  constructor(\n    private toastr:ToastrService,\n    private u_service: UserService,\n    private router:Router,\n    private route: ActivatedRoute\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.formParameters.data.empty()\n    this.formParameters.old_data.empty()\n    this.route.paramMap.pipe(\n      first()\n    ).subscribe( params => {\n      this.fillForm(+params.get('id'))\n    });\n  }\n\n  fillForm(id:number){\n    console.log(id)\n    this.u_service.get(id).subscribe( data => {\n      console.log(data)\n      if (!data){\n        this.toastr.error('Server Error!')\n        this.router.navigate(['../../'], { relativeTo: this.route });\n        return\n      }\n\n      Object.assign(this.formParameters.data, data)\n      Object.assign(this.formParameters.old_data, data)\n\n\n      console.log(this.formParameters.data)\n      this.loadingForm.next(false)\n\n    })\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  save(){\n    this.loadingForm.next(true)\n    let data = this.makeClone(this.formParameters.data)\n    let old_data = this.makeClone(this.formParameters.old_data)\n\n    console.log(this.formParameters.data)\n    if (JSON.stringify(data) == JSON.stringify(old_data)){\n      this.toastr.warning('No Changes Detected!')\n      this.loadingForm.next(false)\n      return;\n    }\n\n    data.group = (data.group[0] && data.group[0].id) ? data.group[0].id : null\n    if (!data.password && data.password == '') delete data.password\n    if (!data.repassword && data.repassword == '') delete data.repassword\n    console.log(data)\n\n    this.u_service.save(data).subscribe( data => {\n      console.log(data)\n      this.validation.next(data.error.validation)\n      if (data.error.status){\n        this.loadingForm.next(false)\n        return\n      }\n      if (data.save) {\n        this.toastr.success('User Changed!');\n        this.router.navigate(['../../'], { relativeTo: this.route });\n      } else {\n        this.toastr.error('Unknown server error');\n      }\n      this.loadingForm.next(false)\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nconst API_URL = 'api/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  add(user:{}) {\r\n    return this.http.post<any>(API_URL + '/add/', user)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n  get(id:number) {\r\n    const params = new HttpParams()\r\n    .set('id', id.toString());\r\n    return this.http.get<any>(API_URL + '/edit/', { params })\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data.user\r\n        } )\r\n      )\r\n  }\r\n\r\n  save(user:{}) {\r\n    return this.http.post<any>(API_URL + '/edit/', user)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n}\r\n","module.exports = \"<kt-main-table [options]=\\\"tableOptions\\\">\\n</kt-main-table>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9hcGktdXNlcnMvdXNlcnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kt-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersAPIComponent implements OnInit {\n\n  tableOptions = {\n    table: {\n      delBtn: '/api/user/delete/',\n      editBtn: true,\n      selectable: true,\n      preview: false,\n      pagination: false,\n      mainUrl: '/user/datatables/',\n      columns: {\n        id: { title: 'ID', show: false, sortable: true },\n        username: { title: 'Username', show: true, sortable: true },\n        created_at: { title: 'Created', show: false, sortable: true },\n        updated_at: { title: 'Updated', show: false, sortable: true },\n      },\n    },\n    buttons: {\n      add:{\n        enable: true,\n        name: 'Add User',\n        link: 'add',\n      },\n      filter: {\n        enable: true\n      },\n      actions: {\n        enable: true,\n        options: []\n      },\n      moreColumns: {\n        enable: true\n      }\n    }\n  }\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n// NgBootstrap\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n//Form\nimport { FormsModule } from '@angular/forms';\n//PortletModule\nimport { PortletModule } from '../../../partials/content/general/portlet/portlet.module';\n\nimport { PagesModule } from '../../pages.module'\n\n//Form\nimport { ApiUserFormComponent } from '../../../partials/layout/tacgui/_forms/api-user-form/api-user-form.component';\n\nimport { AddAPIComponent } from './add/add.component';\nimport { EditAPIComponent } from './edit/edit.component';\n\nimport { UsersAPIComponent } from './users.component';\n\n@NgModule({\n  declarations: [\n    AddAPIComponent,\n    EditAPIComponent,\n    UsersAPIComponent,\n    ApiUserFormComponent\n  ],\n  imports: [\n    CommonModule,\n    PagesModule,\n    NgbModule,\n    FormsModule,\n    PortletModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: UsersAPIComponent\n      },\n      {\n        path: 'add',\n        component: AddAPIComponent,\n      },\n      {\n        path: 'edit/:id',\n        component: EditAPIComponent\n      },\n    ]),\n  ]\n})\nexport class UsersModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <kt-portlet [class]=\\\"(loading | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <h5>General Settings</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Username</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.username }\\\"\\n                  [(ngModel)]=\\\"options.data.username\\\" placeholder=\\\"Username\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.username;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\">it will be used for authorization and you can't change it further time</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <kt-field-general-list [data]=\\\"options.data.group\\\"\\n                [params]=\\\"list.group\\\"\\n                [errors]=\\\"(validation | async)?.group\\\"\\n                (returnData)=\\\"setGroup($event)\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.group }\\\" >\\n              </kt-field-general-list>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Password</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.password }\\\"\\n                  [(ngModel)]=\\\"options.data.password\\\" placeholder=\\\"Password\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.password;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Repeat Password</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.repassword }\\\"\\n                  [(ngModel)]=\\\"options.data.repassword\\\" placeholder=\\\"Repeat Password\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.repassword;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"options.data.changePasswd\\\"> Change password in next login\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">user must change password in next login</span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Firstname</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.firstname }\\\"\\n                  [(ngModel)]=\\\"options.data.firstname\\\" placeholder=\\\"Firstname\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.firstname;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\">Optional</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Surename</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.surname }\\\"\\n                  [(ngModel)]=\\\"options.data.surname\\\" placeholder=\\\"Surename\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.surname;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\">Optional</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Email</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.email }\\\"\\n                  [(ngModel)]=\\\"options.data.email\\\" placeholder=\\\"Email\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.email;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\">Optional</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Position</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.position }\\\"\\n                  [(ngModel)]=\\\"options.data.position\\\" placeholder=\\\"Position\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.position;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\">Optional</span>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhcnRpYWxzL2xheW91dC90YWNndWkvX2Zvcm1zL2FwaS11c2VyLWZvcm0vYXBpLXVzZXItZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input } from '@angular/core';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'kt-api-user-form',\n  templateUrl: './api-user-form.component.html',\n  styleUrls: ['./api-user-form.component.scss']\n})\nexport class ApiUserFormComponent implements OnInit {\n\n  @Input() options\n\n  @Input() validation\n  @Input() loading\n\n  list = {\n    group: {\n      multiple: false,\n      title: 'User Group',\n      title_sidebar: 'User Groups List',\n      search: true,\n      apiurl: 'api/user/group/list/',\n    }\n  }\n\n  constructor(private toastr:ToastrService) { }\n\n  ngOnInit() {\n    this.validation.subscribe(data => {\n      //console.log(data)\n      for (let key in data) {\n        if (data[key]) {\n          //console.log(data[key])\n          for (let i = 0; i < data[key].length; i++) {\n              this.toastr.error(data[key][i]);\n          }\n        }\n      }\n    })\n  }\n\n  setGroup(data) {\n    //console.log(data)\n    this.options.data.group = data\n  }\n\n}\n"],"sourceRoot":""}