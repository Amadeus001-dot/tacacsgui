{"version":3,"sources":["webpack:///./src/app/views/pages/mavis/ldap/ldap.component.html","webpack:///./src/app/views/pages/mavis/ldap/ldap.component.scss","webpack:///./src/app/views/pages/mavis/ldap/ldap.component.ts","webpack:///./src/app/views/pages/mavis/ldap/ldap.service.ts","webpack:///./src/app/views/pages/mavis/local/local.component.html","webpack:///./src/app/views/pages/mavis/local/local.component.scss","webpack:///./src/app/views/pages/mavis/local/local.component.ts","webpack:///./src/app/views/pages/mavis/local/local.service.ts","webpack:///./src/app/views/pages/mavis/mavis.module.ts","webpack:///./src/app/views/pages/mavis/otp/otp.component.html","webpack:///./src/app/views/pages/mavis/otp/otp.component.scss","webpack:///./src/app/views/pages/mavis/otp/otp.component.ts","webpack:///./src/app/views/pages/mavis/otp/otp.service.ts","webpack:///./src/app/views/pages/mavis/sms/sms.component.html","webpack:///./src/app/views/pages/mavis/sms/sms.component.scss","webpack:///./src/app/views/pages/mavis/sms/sms.component.ts","webpack:///./src/app/views/pages/mavis/sms/sms.service.ts","webpack:///./src/app/views/pages/mavis/test/test.component.html","webpack:///./src/app/views/pages/mavis/test/test.component.scss","webpack:///./src/app/views/pages/mavis/test/test.component.ts","webpack:///./src/app/views/pages/mavis/test/test.service.ts"],"names":[],"mappings":"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","file":"app-views-pages-mavis-mavis-module.c7baf69671b5add666ab.js","sourcesContent":["module.exports = \"<ngb-tabset (tabChange)=\\\"filterEvent($event)\\\">\\n  <ngb-tab title=\\\"LDAP Settings\\\">\\n    <ng-template ngbTabContent>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <kt-portlet [class]=\\\"(loadingForm | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t<label style=\\\"width: 100%;\\\">MAVIS LDAP Enabled</label>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--success\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<label>\\n  \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.enabled\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n  \\t\\t\\t\\t\\t\\t\\t</label>\\n  \\t\\t\\t\\t\\t\\t</span>\\n    \\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n      <div class=\\\"block-below\\\">\\n        <div class=\\\"block-partial\\\" *ngIf=\\\"!params.enabled\\\"></div>\\n        <div class=\\\"block-container\\\" [ngClass]=\\\"{ 'active' : !params.enabled }\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label class=\\\"col-2 col-form-label\\\">LDAP Type</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n      \\t\\t\\t\\t\\t\\t<select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"params.type\\\">\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"microsoft\\\" selected=\\\"\\\">Microsoft</option>\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"openldap\\\">OpenLDAP</option>\\n      \\t\\t\\t\\t\\t\\t</select>\\n                  <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label class=\\\"col-3 col-form-label\\\">LDAP Server List</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-9\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [(ngModel)]=\\\"params.hosts\\\">\\n                  <span class=\\\"form-text text-muted\\\">comma-separated list of IP addresses or hostnames (don't try to set port here), e.g. 10.2.1.2, 10.2.3.2</span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label >LDAP Base</label>\\n    \\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [(ngModel)]=\\\"params.base\\\">\\n                <span class=\\\"form-text text-muted\\\">base DN of your LDAP server, e.g. dc=domain,dc=name</span>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label >LDAP Search Attribute</label>\\n    \\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [(ngModel)]=\\\"params.filter\\\">\\n                <span class=\\\"form-text text-muted\\\">LDAP search attribute, e.g. sAMAccountName</span>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label >Username</label>\\n    \\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [(ngModel)]=\\\"params.user\\\">\\n                <span class=\\\"form-text text-muted\\\">ldap user, without or with domain suffix</span>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label >Password</label>\\n    \\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"password\\\" [(ngModel)]=\\\"params.password\\\">\\n                <span class=\\\"form-text text-muted\\\">password for LDAP User</span>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"accordion accordion-light  accordion-toggle-arrow\\\" >\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <div class=\\\"card-title collapsed\\\" [ngClass]=\\\"{ collapsed: !notCollapsedM }\\\" data-toggle=\\\"collapse\\\" (click)=\\\"notCollapsedM = !notCollapsedM\\\"\\n                            [attr.aria-expanded]=\\\"!notCollapsedM\\\">Advanced Settings</div>\\n                </div>\\n                <div [ngbCollapse]=\\\"!notCollapsedM\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-12\\\">\\n                        <div class=\\\"form-group row\\\">\\n              \\t\\t\\t\\t\\t\\t<label class=\\\"col-3 col-form-label\\\">LDAP Port</label>\\n              \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n              \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" [(ngModel)]=\\\"params.port\\\">\\n                            <span class=\\\"form-text text-muted\\\"></span>\\n              \\t\\t\\t\\t\\t\\t</div>\\n              \\t\\t\\t\\t\\t</div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label style=\\\"width: 100%;\\\">User can switch Tacacs Group</label>\\n              \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--sm kt-switch--success\\\">\\n              \\t\\t\\t\\t\\t\\t\\t<label>\\n              \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.group_selection\\\">\\n              \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n              \\t\\t\\t\\t\\t\\t\\t</label>\\n              \\t\\t\\t\\t\\t\\t</span>\\n              \\t\\t\\t\\t\\t</div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label style=\\\"width: 100%;\\\">Default Message</label>\\n              \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--sm kt-switch--success\\\">\\n              \\t\\t\\t\\t\\t\\t\\t<label>\\n              \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.message_flag\\\">\\n              \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n              \\t\\t\\t\\t\\t\\t\\t</label>\\n              \\t\\t\\t\\t\\t\\t</span>\\n              \\t\\t\\t\\t\\t</div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label style=\\\"width: 100%;\\\">Enable password as Login</label>\\n              \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--sm kt-switch--success\\\">\\n              \\t\\t\\t\\t\\t\\t\\t<label>\\n              \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.enable_login\\\">\\n              \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n              \\t\\t\\t\\t\\t\\t\\t</label>\\n              \\t\\t\\t\\t\\t\\t</span>\\n              \\t\\t\\t\\t\\t</div>\\n                      </div>\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label style=\\\"width: 100%;\\\">PAP password as Login</label>\\n              \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--sm kt-switch--success\\\">\\n              \\t\\t\\t\\t\\t\\t\\t<label>\\n              \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.pap_login\\\">\\n              \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n              \\t\\t\\t\\t\\t\\t\\t</label>\\n              \\t\\t\\t\\t\\t\\t</span>\\n              \\t\\t\\t\\t\\t</div>\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Save</button>&nbsp;\\n    <button class=\\\"btn btn-warning btn-elevate btn-sm\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--v2 kt-spinner--right kt-spinner--sm kt-spinner--dark' : (test_loading | async) }\\\"\\n      (click)=\\\"test()\\\">\\n      Test\\n    </button>&nbsp;&nbsp;&nbsp;\\n    <span [ngClass]=\\\"{ 'text-success' : ( (test_result | async) == 'Success'),\\n      'text-muted' : ( (test_loading | async) ),\\n      'text-danger' :  !(test_loading | async) && !( (test_result | async) == 'Success') }\\\">{{test_result | async}}</span>\\n  </div>\\n</div>\\n\\n</ng-template>\\n</ngb-tab>\\n<ngb-tab title=\\\"LDAP Groups\\\">\\n<ng-template ngbTabContent>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9 col-lg-8\\\">\\n      <kt-portlet>\\n        <kt-portlet-body>\\n          <ngb-tabset>\\n            <ngb-tab title=\\\"Group Search\\\">\\n              <ng-template ngbTabContent>\\n                <kt-main-table [options]=\\\"tableOptions_search\\\">\\n                </kt-main-table>\\n              </ng-template>\\n            </ngb-tab>\\n            <ngb-tab title=\\\"Group Bind Table\\\">\\n              <ng-template ngbTabContent>\\n                <kt-main-table [options]=\\\"tableOptions_bind\\\">\\n                </kt-main-table>\\n              </ng-template>\\n            </ngb-tab>\\n          </ngb-tabset>\\n        </kt-portlet-body>\\n      </kt-portlet>\\n    </div>\\n  </div>\\n</ng-template>\\n</ngb-tab>\\n</ngb-tabset>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL21hdmlzL2xkYXAvbGRhcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LdapService } from './ldap.service'\n\nconst LdapMavis = {\n  enabled: 0,\n  period: 30,\n  digits: 6,\n  digest: \"sha1\"\n}\n\n@Component({\n  selector: 'kt-ldap',\n  templateUrl: './ldap.component.html',\n  styleUrls: ['./ldap.component.scss']\n})\nexport class LdapComponent implements OnInit {\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(true)\n  test_result = new BehaviorSubject('')\n  test_loading = new BehaviorSubject(false)\n  params = LdapMavis\n  params_old = ''\n\n  constructor(\n    private toastr:ToastrService,\n    private mavis_ldap: LdapService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    this.mavis_ldap.get().subscribe(data =>{\n      this.params = data\n      this.params_old = JSON.stringify(data)\n      this.loadingForm.next(false)\n    })\n  }\n\n  test(){\n    this.test_result.next('Loading...')\n    this.test_loading.next(true)\n    let clone = JSON.parse(JSON.stringify(this.params))\n    if (clone.password == JSON.parse(this.params_old).password) delete clone.password\n    this.mavis_ldap.testCon(this.params).subscribe(data => {\n      this.test_loading.next(false)\n\n      if (data.exception)\n        this.test_result.next(data.exception)\n      else\n        this.test_result.next('Success')\n\n    })\n  }\n\n  save(){\n    this.loadingForm.next(true)\n\n    if (this.params_old == JSON.stringify(this.params)){\n      this.toastr.warning('No Changes Detected!')\n      this.loadingForm.next(false)\n      return;\n    }\n\n    let clone = JSON.parse(JSON.stringify(this.params))\n    console.log(clone)\n    if (clone.password == JSON.parse(this.params_old).password) delete clone.password\n    clone.enabled += 0;\n    clone.enable_login += 0;\n    clone.group_selection += 0;\n    clone.message_flag += 0;\n    clone.pap_login += 0;\n\n    this.mavis_ldap.save(clone).subscribe(data =>{\n      if (data.mavis_ldap_update) {\n        this.toastr.success('Settings Saved')\n        this.init()\n        return\n      }\n      this.toastr.error('Unexpcted Error')\n      this.init()\n      return\n\n    })\n  }\n\n  tableOptions_search = {\n    table: {\n      delBtn: null,\n      editBtn: false,\n      selectable: false,\n      preview: null,\n      pagination: {\n        enable: true,\n        perpageItems: [10,20,30],\n        total: false\n      },\n      mainUrl: '/mavis/ldap/group/search/',\n      columns: {\n        gidnumber: { title: 'gidnumber', show: false, sortable: false },\n        cn: { title: 'CN', show: false, sortable: false },\n        dn: { title: 'DN', show: true, sortable: false},\n        added: { title: 'Action', show: true, sortable: false,\n          htmlPattern: (data, column_name, index, all_data) => {\n            //console.log(data, column_name, index);\n            let buttom_icon = (data) ? 'fa-minus' : 'fa-plus';\n            let buttom_color = (data) ? 'warning' : 'success';\n            all_data.pipe(first())\n              .subscribe(data => {\n                // console.log(data[index])\n\n              });\n            return '<button class=\"btn btn-outline-hover-'+buttom_color+' btn-sm btn-icon\" (click)=\"alert()\">'+\n              '<i class=\"fa '+buttom_icon+'\"></i>'+\n              '</button>';\n          },\n          onClick: (data, column_name, index, all_data) => {\n            all_data.pipe(first())\n              .subscribe(data_all => {\n                console.log(data_all[index]['dn'])\n                this.mavis_ldap.bind(data, data_all[index]['dn']).subscribe(data_return =>{\n                  console.log(data_return)\n                })\n              });\n            return true\n          }\n        },\n      },\n    },\n    buttons: {\n      add: null,\n      filter: {\n        enable: false,\n        filter: true\n      },\n      actions: null,\n      moreColumns: null\n    }\n  }\n  tableOptions_bind = {\n    table: {\n      delBtn: null,\n      editBtn: false,\n      selectable: false,\n      preview: null,\n      pagination: null,\n      mainUrl: '/mavis/ldap/group/bind/table/',\n      columns: {\n        cn: { title: 'CN', show: true, sortable: false },\n        dn: { title: 'DN', show: true, sortable: false},\n      },\n    },\n    buttons: {\n      add: null,\n      filter: {\n        enable: false,\n        filter: true\n      },\n      actions: null,\n      moreColumns: null\n    }\n  }\n\n  filterEvent(event){\n    console.log(event)\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nconst API_URL = 'api/mavis/ldap/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LdapService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get() {\r\n    return this.http.get<any>(API_URL)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data.params\r\n        } )\r\n      )\r\n  }\r\n\r\n  save(data:{}) {\r\n    return this.http.post<any>(API_URL, data)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n  testCon(data:{}) {\r\n    return this.http.post<any>(API_URL+'test/', data)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n  bind(action:number, dn:any) {\r\n    if (Array.isArray(dn)) dn = dn[0]\r\n    return this.http.post<any>(API_URL+'group/bind/', {action, dn })\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <kt-portlet [class]=\\\"(loadingForm | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t<label style=\\\"width: 100%;\\\">MAVIS Local Enabled</label>\\n    \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--success\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<label>\\n    \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.enabled\\\">\\n    \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n    \\t\\t\\t\\t\\t\\t\\t</label>\\n    \\t\\t\\t\\t\\t\\t</span>\\n    \\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n      <div class=\\\"block-below\\\">\\n        <div class=\\\"block-partial\\\" *ngIf=\\\"!params.enabled\\\"></div>\\n        <div class=\\\"block-container\\\" [ngClass]=\\\"{ 'active' : !params.enabled }\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n    \\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"params.change_passwd_cli\\\"> Change Password via NAS CLI\\n    \\t\\t\\t\\t\\t\\t<span></span>\\n    \\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">user will be able to change your password via device (NAS) CLI, empty password at login, the user is given the option to change his password</span>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n    \\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"params.change_passwd_gui\\\"> Change Password via GUI\\n    \\t\\t\\t\\t\\t\\t<span></span>\\n    \\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">user will be able to change your password via GUI</span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL21hdmlzL2xvY2FsL2xvY2FsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\nimport { LocalService } from './local.service'\n\nconst LocalMavis = {\n  enabled: 0,\n  change_passwd_cli: 0,\n  change_passwd_gui: 0\n}\n\n@Component({\n  selector: 'kt-local',\n  templateUrl: './local.component.html',\n  styleUrls: ['./local.component.scss']\n})\nexport class LocalComponent implements OnInit {\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(true)\n  params = LocalMavis\n  params_old = ''\n\n  constructor(\n    private toastr:ToastrService,\n    private mavis_local: LocalService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    this.mavis_local.get().subscribe(data =>{\n      this.params = data\n      this.params_old = JSON.stringify(data)\n      this.loadingForm.next(false)\n    })\n  }\n\n  save(){\n    this.loadingForm.next(true)\n    if (this.params_old == JSON.stringify(this.params)){\n      this.toastr.warning('No Changes Detected!')\n      this.loadingForm.next(false)\n      return;\n    }\n    this.params.enabled += 0;\n    this.params.change_passwd_cli += 0;\n    this.params.change_passwd_gui += 0;\n    \n    this.mavis_local.save(this.params).subscribe(data =>{\n      if (data.mavis_local_update) {\n        this.toastr.success('Settings Saved')\n        this.init()\n        return\n      }\n      this.toastr.error('Unexpcted Error')\n      this.init()\n      return\n\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, first } from 'rxjs/operators';\n\nconst API_URL = 'api/mavis/local/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalService {\n\n  constructor(private http: HttpClient) {}\n\n  get() {\n    return this.http.get<any>(API_URL)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data.params\n        } )\n      )\n  }\n\n  save(data:{}) {\n    return this.http.post<any>(API_URL, data)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n// NgBootstrap\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PagesModule } from '../pages.module'\n\nimport { PortletModule } from '../../partials/content/general/portlet/portlet.module';\n\nimport { ClockModule } from '../../partials/layout/tacgui/_fields/clock/clock.module'\n\nimport { OtpComponent } from './otp/otp.component';\nimport { LocalComponent } from './local/local.component';\nimport { SmsComponent } from './sms/sms.component';\nimport { LdapComponent } from './ldap/ldap.component';\nimport { TestComponent } from './test/test.component';\n\n@NgModule({\n  declarations: [\n    OtpComponent,\n    LocalComponent,\n    SmsComponent,\n    LdapComponent,\n    TestComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    PortletModule,\n    ClockModule,\n    PagesModule,\n    NgbModule,\n    RouterModule.forChild([\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tredirectTo: '', pathMatch: 'full'\n\t\t\t},\n      {\n\t\t\t\tpath: 'local',\n\t\t\t\tcomponent: LocalComponent\n\t\t\t},\n      {\n\t\t\t\tpath: 'sms',\n\t\t\t\tcomponent: SmsComponent\n\t\t\t},\n      {\n\t\t\t\tpath: 'test',\n\t\t\t\tcomponent: TestComponent\n\t\t\t},\n      {\n\t\t\t\tpath: 'otp',\n\t\t\t\tcomponent: OtpComponent\n\t\t\t},\n      {\n\t\t\t\tpath: 'ldap',\n\t\t\t\tcomponent: LdapComponent\n\t\t\t},\n\t\t]),\n  ]\n})\nexport class MavisModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <kt-portlet [class]=\\\"(loadingForm | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t<label style=\\\"width: 100%;\\\">MAVIS OTP Enabled</label>\\n    \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--success\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<label>\\n    \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.enabled\\\">\\n    \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n    \\t\\t\\t\\t\\t\\t\\t</label>\\n    \\t\\t\\t\\t\\t\\t</span>\\n    \\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n      <div class=\\\"block-below\\\">\\n        <div class=\\\"block-partial\\\" *ngIf=\\\"!params.enabled\\\"></div>\\n        <div class=\\\"block-container\\\" [ngClass]=\\\"{ 'active' : !params.enabled }\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Period</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" [(ngModel)]=\\\"params.period\\\">\\n                  <span class=\\\"form-text text-muted\\\">period of generating OTP. By default, the period for a TOTP is 30 seconds</span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Digits</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" [(ngModel)]=\\\"params.digits\\\">\\n                  <span class=\\\"form-text text-muted\\\">by default the number of digits is 6, more than 10 may be difficult to use by the owner</span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Digest</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n      \\t\\t\\t\\t\\t\\t<select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"params.digest\\\">\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"sha1\\\">sha1</option>\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"sha256\\\">sha256</option>\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"md5\\\">md5</option>\\n      \\t\\t\\t\\t\\t\\t</select>\\n                  <span class=\\\"form-text text-muted\\\">if you don't know what to choose leave it as default (first value)</span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <kt-clock [title]=\\\"'Current Server Time:'\\\" [time_init]=\\\"1\\\" [timezone]=\\\"false\\\"></kt-clock>\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL21hdmlzL290cC9vdHAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\nimport { OtpService } from './otp.service'\n\nconst OtpMavis = {\n  enabled: 0,\n  period: 30,\n  digits: 6,\n  digest: \"sha1\"\n}\n\n@Component({\n  selector: 'kt-otp',\n  templateUrl: './otp.component.html',\n  styleUrls: ['./otp.component.scss']\n})\nexport class OtpComponent implements OnInit {\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(true)\n  params = OtpMavis\n  params_old = ''\n\n  constructor(\n    private toastr:ToastrService,\n    private mavis_otp: OtpService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    this.mavis_otp.get().subscribe(data =>{\n      this.params = data\n      this.params_old = JSON.stringify(data)\n      this.loadingForm.next(false)\n    })\n  }\n\n  save(){\n    if(!confirm('Any changes will make old passwords incorrect! Continue?')) return;\n    this.loadingForm.next(true)\n    if (this.params_old == JSON.stringify(this.params)){\n      this.toastr.warning('No Changes Detected!')\n      this.loadingForm.next(false)\n      return;\n    }\n    this.params.enabled += 0;\n    this.mavis_otp.save(this.params).subscribe(data =>{\n      if (data.mavis_otp_update) {\n        this.toastr.success('Settings Saved')\n        this.init()\n        return\n      }\n      this.toastr.error('Unexpcted Error')\n      this.init()\n      return\n\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nconst API_URL = 'api/mavis/otp/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OtpService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get() {\r\n    return this.http.get<any>(API_URL)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data.params\r\n        } )\r\n      )\r\n  }\r\n\r\n  save(data:{}) {\r\n    return this.http.post<any>(API_URL, data)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <kt-portlet [class]=\\\"(loadingForm | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t<label style=\\\"width: 100%;\\\">MAVIS SMS Enabled</label>\\n    \\t\\t\\t\\t\\t\\t<span class=\\\"kt-switch kt-switch--outline kt-switch--success\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<label>\\n    \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" checked [(ngModel)]=\\\"params.enabled\\\">\\n    \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n    \\t\\t\\t\\t\\t\\t\\t</label>\\n    \\t\\t\\t\\t\\t\\t</span>\\n    \\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n      <div class=\\\"block-below\\\">\\n        <div class=\\\"block-partial\\\" *ngIf=\\\"!params.enabled\\\"></div>\\n        <div class=\\\"block-container\\\" [ngClass]=\\\"{ 'active' : !params.enabled }\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">SMPP Server</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [(ngModel)]=\\\"params.ipaddr\\\">\\n                  <span class=\\\"form-text text-muted\\\">address of SMPP server</span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Port</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" [(ngModel)]=\\\"params.port\\\">\\n                  <span class=\\\"form-text text-muted\\\">port of SMPP server</span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Source Name</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [(ngModel)]=\\\"params.srcname\\\">\\n                  <span class=\\\"form-text text-muted\\\">you can get that information from your provider</span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Username</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [(ngModel)]=\\\"params.login\\\">\\n                  <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Password</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"password\\\" [(ngModel)]=\\\"params.pass\\\">\\n                  <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Test Phone Number</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid' : (phone_error | async)?.length }\\\" [(ngModel)]=\\\"phone\\\">\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (phone_error | async);\\\">{{message}}</p>\\n                  </div>\\n                  <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n          <ng-container *ngIf=\\\"( check_result | async )\\\">\\n            <pre>{{ ( check_result | async ) }}</pre>\\n          </ng-container>\\n        </div>\\n      </div>\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Save</button>&nbsp;\\n    <button (click)=\\\"test()\\\" class=\\\"btn btn-warning btn-elevate btn-sm\\\" >Test</button>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL21hdmlzL3Ntcy9zbXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\nimport { SmsService } from './sms.service'\n\nconst SMSMavis = {\n  enabled: 0,\n  login: '',\n  pass: '',\n  digest: \"sha1\"\n}\n\n@Component({\n  selector: 'kt-sms',\n  templateUrl: './sms.component.html',\n  styleUrls: ['./sms.component.scss']\n})\nexport class SmsComponent implements OnInit {\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(true)\n  params = SMSMavis\n  params_old = ''\n  phone = ''\n  phone_error = new BehaviorSubject([])\n  check_result = new BehaviorSubject('')\n\n  constructor(\n    private toastr:ToastrService,\n    private mavis_sms: SmsService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    this.mavis_sms.get().subscribe(data =>{\n      this.params = data\n      this.params_old = JSON.stringify(data)\n      this.loadingForm.next(false)\n    })\n  }\n\n  test(){\n    this.phone_error.next([]);\n    if (!this.phone){\n      this.phone_error.next(['Phone number can not be empty'])\n      return\n    }\n    let clone = JSON.parse(JSON.stringify(this.params))\n\n    if (clone.pass == JSON.parse(this.params_old).pass) delete clone.pass\n\n    this.mavis_sms.send(clone, this.phone).subscribe(data => {\n      this.check_result.next(data.check_result)\n    })\n  }\n\n  save(){\n    this.loadingForm.next(true)\n    if (this.params_old == JSON.stringify(this.params)){\n      this.toastr.warning('No Changes Detected!')\n      this.loadingForm.next(false)\n      return;\n    }\n\n    let clone = JSON.parse(JSON.stringify(this.params))\n\n    if (clone.pass == JSON.parse(this.params_old).pass) delete clone.pass\n    clone.enabled += 0;\n\n    // console.log(clone)\n    this.mavis_sms.save(clone).subscribe(data =>{\n      if (data.mavis_sms_update) {\n        this.toastr.success('Settings Saved')\n        this.init()\n        return\n      }\n      this.toastr.error('Unexpcted Error')\n      this.init()\n      return\n\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nconst API_URL = 'api/mavis/sms/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SmsService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get() {\r\n    return this.http.get<any>(API_URL)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data.params\r\n        } )\r\n      )\r\n  }\r\n\r\n  save(data:{}) {\r\n    return this.http.post<any>(API_URL, data)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n  send(data:{}, number:string) {\r\n    data['number'] = number\r\n    return this.http.post<any>(API_URL+'send/', data)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <kt-portlet [class]=\\\"(loadingForm | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Username</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.username }\\\" [(ngModel)]=\\\"username\\\">\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (validation | async)?.username;\\\">{{message}}</p>\\n                  </div>\\n                  <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          <div class=\\\"row\\\">\\n          </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group row\\\">\\n    \\t\\t\\t\\t\\t\\t<label for=\\\"example-text-input\\\" class=\\\"col-2 col-form-label\\\">Password</label>\\n    \\t\\t\\t\\t\\t\\t<div class=\\\"col-6\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"password\\\" [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.password }\\\" [(ngModel)]=\\\"password\\\">\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (validation | async)?.password;\\\">{{message}}</p>\\n                  </div>\\n                  <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t\\t</div>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n\\n      <kt-clock [title]=\\\"'Current Server Time:'\\\" [time_init]=\\\"1\\\" [timezone]=\\\"false\\\"></kt-clock>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n          <pre>{{result | async}}</pre>\\n        </div>\\n      </div>\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-warning btn-elevate btn-sm\\\"\\n      (click)=\\\"test()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Test</button>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL21hdmlzL3Rlc3QvdGVzdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\nimport { TestService } from './test.service'\n\n@Component({\n  selector: 'kt-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  username = ''\n  password = ''\n\n  result = new BehaviorSubject('Result will appeared here')\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(false)\n\n  constructor(\n    private toastr:ToastrService,\n    private mavis_test: TestService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  validationFill() {\n    this.validation.subscribe(data => {\n      //console.log(data)\n      for (let key in data) {\n        if (data[key]) {\n          //console.log(data[key])\n          for (let i = 0; i < data[key].length; i++) {\n              this.toastr.error(data[key][i]);\n          }\n        }\n      }\n    })\n  }\n\n  test(){\n    this.validation.next({})\n    this.result.next('Loading...')\n    this.mavis_test.test(this.username, this.password).subscribe( data => {\n      // console.log(data)\n      if (data.error.status){\n        this.validation.next(data.error.validation)\n        for (let key in data.error.validation) {\n          if (data.error.validation[key]) {\n            //console.log(data.error.validation[key])\n            for (let i = 0; i < data.error.validation[key].length; i++) {\n                this.toastr.error(data.error.validation[key][i]);\n            }\n          }\n        }\n        this.result.next('Error.')\n        return\n      }\n      this.result.next(data.check_result)\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, first } from 'rxjs/operators';\n\nconst API_URL = 'api/mavis/otp/check/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n\n  constructor(private http: HttpClient) {}\n\n  test(username:string, password:string) {\n    return this.http.post<any>(API_URL, {username, password})\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n}\n"],"sourceRoot":""}