{"version":3,"sources":["webpack:///./src/app/views/pages/gui/settings/ha/ha.component.html","webpack:///./src/app/views/pages/gui/settings/ha/ha.component.scss","webpack:///./src/app/views/pages/gui/settings/ha/ha.component.ts","webpack:///./src/app/views/pages/gui/settings/logging/logging.component.html","webpack:///./src/app/views/pages/gui/settings/logging/logging.component.scss","webpack:///./src/app/views/pages/gui/settings/logging/logging.component.ts","webpack:///./src/app/views/pages/gui/settings/network/network.component.html","webpack:///./src/app/views/pages/gui/settings/network/network.component.scss","webpack:///./src/app/views/pages/gui/settings/network/network.component.ts","webpack:///./src/app/views/pages/gui/settings/passpolicy/passpolicy.component.html","webpack:///./src/app/views/pages/gui/settings/passpolicy/passpolicy.component.scss","webpack:///./src/app/views/pages/gui/settings/passpolicy/passpolicy.component.ts","webpack:///./src/app/views/pages/gui/settings/settings.module.ts","webpack:///./src/app/views/pages/gui/settings/settings.service.ts","webpack:///./src/app/views/pages/gui/settings/smtp/smtp.component.html","webpack:///./src/app/views/pages/gui/settings/smtp/smtp.component.scss","webpack:///./src/app/views/pages/gui/settings/smtp/smtp.component.ts","webpack:///./src/app/views/pages/gui/settings/time/time.component.html","webpack:///./src/app/views/pages/gui/settings/time/time.component.scss","webpack:///./src/app/views/pages/gui/settings/time/time.component.ts"],"names":[],"mappings":"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","file":"settings-settings-module.1de54a04227881ca9add.js","sourcesContent":["module.exports = \"<p>\\n  ha works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9zZXR0aW5ncy9oYS9oYS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'kt-ha',\n  templateUrl: './ha.component.html',\n  styleUrls: ['./ha.component.scss']\n})\nexport class HaComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <kt-portlet [class]=\\\"(loading | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <h5>API Logging</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group \\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\n              <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"periods.api\\\">\\n                <option value=\\\"3 years\\\">older then 3 years</option>\\n                <option value=\\\"1 year\\\">older then 1 years</option>\\n                <option value=\\\"6 months\\\">older then 6 months</option>\\n                <option value=\\\"3 months\\\">older then 3 months</option>\\n                <option value=\\\"1 month\\\">older then 1 month</option>\\n                <option value=\\\"all\\\">ALL LOGS</option>\\n  \\t\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group-append\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"del('api')\\\">Delete</button>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n        <hr>\\n        <h5>Tacacs Authentication Logging</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group \\\">\\n            <div class=\\\"input-group\\\">\\n              <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"periods.authentication\\\">\\n                <option value=\\\"3 years\\\">older then 3 years</option>\\n                <option value=\\\"1 year\\\">older then 1 years</option>\\n                <option value=\\\"6 months\\\">older then 6 months</option>\\n                <option value=\\\"3 months\\\">older then 3 months</option>\\n                <option value=\\\"1 month\\\">older then 1 month</option>\\n                <option value=\\\"all\\\">ALL LOGS</option>\\n              </select>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"del('authentication')\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n          </div>\\n        </div>\\n        <h5>Tacacs Authorization Logging</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group \\\">\\n            <div class=\\\"input-group\\\">\\n              <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"periods.authorization\\\">\\n                <option value=\\\"3 years\\\">older then 3 years</option>\\n                <option value=\\\"1 year\\\">older then 1 years</option>\\n                <option value=\\\"6 months\\\">older then 6 months</option>\\n                <option value=\\\"3 months\\\">older then 3 months</option>\\n                <option value=\\\"1 month\\\">older then 1 month</option>\\n                <option value=\\\"all\\\">ALL LOGS</option>\\n              </select>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"del('authorization')\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n          </div>\\n        </div>\\n        <h5>Tacacs Accounting Logging</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group \\\">\\n            <div class=\\\"input-group\\\">\\n              <select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"periods.accounting\\\">\\n                <option value=\\\"3 years\\\">older then 3 years</option>\\n                <option value=\\\"1 year\\\">older then 1 years</option>\\n                <option value=\\\"6 months\\\">older then 6 months</option>\\n                <option value=\\\"3 months\\\">older then 3 months</option>\\n                <option value=\\\"1 month\\\">older then 1 month</option>\\n                <option value=\\\"all\\\">ALL LOGS</option>\\n              </select>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-sm btn-danger\\\" type=\\\"button\\\" (click)=\\\"del('accounting')\\\">Delete</button>\\n              </div>\\n            </div>\\n          </div>\\n          </div>\\n        </div>\\n\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9zZXR0aW5ncy9sb2dnaW5nL2xvZ2dpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//Service\nimport { SettingsService } from '../settings.service'\n\n@Component({\n  selector: 'kt-logging',\n  templateUrl: './logging.component.html',\n  styleUrls: ['./logging.component.scss']\n})\nexport class LoggingComponent implements OnInit {\n\n  periods = {\n    api: \"3 years\",\n    authentication: \"3 years\",\n    authorization: \"3 years\",\n    accounting: \"3 years\"\n  }\n  api_log_period = \"3 years\"\n  authe_log_period = \"3 years\"\n  autho_log_period = \"3 years\"\n  acc_log_period = \"3 years\"\n\n  validation = new BehaviorSubject({})\n  loading = new BehaviorSubject(false)\n\n  constructor(\n    private service: SettingsService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  init(){\n    // this.service.smtp_get().subscribe( data => {\n    //   console.log(data)\n    //   this.data = data.smtp\n    //   this.data_old = this.makeClone(data.smtp)\n    //   this.loading.next(false)\n    // })\n  }\n\n  del(type){\n    this.loading.next(true)\n    let data = {\n      period: this.periods[type],\n      target: type\n    }\n    if ( type == 'api' ) delete data.target;\n    this.service.del_reports(data, type).subscribe( data => {\n      console.log(data)\n      this.loading.next(false)\n      if (data.error && data.error.status){\n        this.toastr.error('Unexpected Error!');\n        return;\n      }\n      if (data.result == 0){\n        this.toastr.warning('Nothing Deleted!');\n        return;\n      } else {\n        this.toastr.warning('Deleted '+data.result+'entries');\n      }\n\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <kt-portlet [class]=\\\"(loading | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <h5>General Settings</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-3\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Select Interface</label>\\n  \\t\\t\\t\\t\\t\\t<select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"inter\\\">\\n                <ng-container *ngFor=\\\"let interf of inter_list;\\\">\\n                  <option value=\\\"{{interf}}\\\">{{interf}}</option>\\n                </ng-container>\\n  \\t\\t\\t\\t\\t\\t</select>\\n  \\t\\t\\t\\t\\t</div>\\n          </div>\\n\\n          <div class=\\\"col-9\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n      \\t\\t\\t\\t\\t\\t<label>IP Address</label>\\n      \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                      [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.network_address }\\\"\\n                      [(ngModel)]=\\\"data.network_address\\\" placeholder=\\\"IP Address\\\">\\n                      <!-- is-invalid -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (validation | async)?.network_address;\\\">{{message}}</p>\\n                  </div>\\n      \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n                </div>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n      \\t\\t\\t\\t\\t\\t<label>Network Mask</label>\\n      \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                      [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.network_mask }\\\"\\n                      [(ngModel)]=\\\"data.network_mask\\\" placeholder=\\\"Network Mask\\\">\\n                      <!-- is-invalid -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (validation | async)?.network_mask;\\\">{{message}}</p>\\n                  </div>\\n      \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n                </div>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n      \\t\\t\\t\\t\\t\\t<label>Gateway</label>\\n      \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                      [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.network_gateway }\\\"\\n                      [(ngModel)]=\\\"data.network_gateway\\\" placeholder=\\\"Gateway\\\">\\n                      <!-- is-invalid -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (validation | async)?.network_gateway;\\\">{{message}}</p>\\n                  </div>\\n      \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n      \\t\\t\\t\\t\\t\\t<label>DNS Server Primary</label>\\n      \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                      [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.network_dns1 }\\\"\\n                      [(ngModel)]=\\\"data.network_dns1\\\" placeholder=\\\"DNS Server Primary\\\">\\n                      <!-- is-invalid -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (validation | async)?.network_dns1;\\\">{{message}}</p>\\n                  </div>\\n      \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n                </div>\\n              </div>\\n              <div class=\\\"col-6\\\">\\n                <div class=\\\"form-group\\\">\\n      \\t\\t\\t\\t\\t\\t<label>DNS Server Secondary</label>\\n      \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                      [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.network_dns2 }\\\"\\n                      [(ngModel)]=\\\"data.network_dns2\\\" placeholder=\\\"DNS Server Secondary\\\">\\n                      <!-- is-invalid -->\\n                  <div class=\\\"invalid-feedback\\\">\\n                    <p *ngFor=\\\"let message of (validation | async)?.network_dns2;\\\">{{message}}</p>\\n                  </div>\\n      \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loading | async) }\\\"\\n      [disabled]=\\\"(loading | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9zZXR0aW5ncy9uZXR3b3JrL25ldHdvcmsuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//Service\nimport { SettingsService } from '../settings.service'\n\n@Component({\n  selector: 'kt-network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.scss']\n})\nexport class NetworkComponent implements OnInit {\n\n  inter_list = []\n  inter = ''\n  data = {\n    network_address: \"\",\n    network_dns1: \"\",\n    network_dns2: \"\",\n    network_gateway: \"\",\n    network_mask: \"\",\n  }\n  data_old = {}\n\n  validation = new BehaviorSubject({})\n  loading = new BehaviorSubject(true)\n\n  constructor(\n    private service: SettingsService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  init(){\n    this.service.network_get(this.inter).subscribe( data => {\n      console.log(data)\n      this.inter = data.list[0];\n      this.inter_list = data.list;\n      this.data = data.interface\n      this.data_old = this.makeClone(data.interface)\n      this.loading.next(false)\n    })\n  }\n\n  save(){\n    console.log(this.data)\n    this.loading.next(true)\n    if (JSON.stringify(this.data) == JSON.stringify(this.data_old)){\n      this.toastr.warning('No Changes Detected!')\n      this.loading.next(false)\n      return;\n    }\n\n    let data = this.makeClone(this.data)\n    data.network_interface = this.inter\n\n    console.log(data)\n\n    this.service.network_post(data).subscribe( data => {\n      console.log(data)\n      this.validation.next(data.error.validation)\n      if (data.error.status){\n        this.loading.next(false)\n        return\n      }\n      this.toastr.success('Changes Saved!')\n      this.init()\n      this.loading.next(false)\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <kt-portlet [class]=\\\"(loading | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <h5>Password Policy For API Users</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Minimal Password Length</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.api_pw_length }\\\"\\n                  [(ngModel)]=\\\"data.api_pw_length\\\" placeholder=\\\"Minimal Password Length\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.api_pw_length;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.api_pw_uppercase\\\"> Upper-case letters\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">must contain [A-Z]</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.api_pw_lowercase\\\"> Lower-case letters\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">must contain [a-z]</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.api_pw_numbers\\\"> Numbers\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">must contain [0-9]</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.api_pw_special\\\"> Special Characters\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">{{'must contain (~!@#$%^&*_-+=`|(){}[]:;><,.?/)'}}</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.api_pw_same\\\"> The same password check\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">can't set the same password</span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <h5>Password Policy For Tacacs Users and Devices</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Minimal Password Length</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.tac_pw_length }\\\"\\n                  [(ngModel)]=\\\"data.tac_pw_length\\\" placeholder=\\\"Minimal Password Length\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.tac_pw_length;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"+data.tac_pw_uppercase\\\"> Upper-case letters\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">must contain [A-Z]</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"+data.tac_pw_lowercase\\\"> Lower-case letters\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">must contain [a-z]</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"+data.tac_pw_numbers\\\"> Numbers\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">must contain [0-9]</span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"+data.tac_pw_special\\\"> Special Characters\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">{{'must contain (~!@#$%^&*_-+=`|(){}[]:;><,.?/)'}}</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"+data.tac_pw_same\\\"> The same password check\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n              <span class=\\\"form-text text-muted\\\">can't set the same password</span>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loading | async) }\\\"\\n      [disabled]=\\\"(loading | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9zZXR0aW5ncy9wYXNzcG9saWN5L3Bhc3Nwb2xpY3kuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//Service\nimport { SettingsService } from '../settings.service'\n\n@Component({\n  selector: 'kt-passpolicy',\n  templateUrl: './passpolicy.component.html',\n  styleUrls: ['./passpolicy.component.scss']\n})\nexport class PasspolicyComponent implements OnInit {\n\n  data = {\n    api_pw_length: 6,\n    api_pw_lowercase: 0,\n    api_pw_numbers: 0,\n    api_pw_same: 0,\n    api_pw_special: 0,\n    api_pw_uppercase: 0,\n    tac_pw_length: 6,\n    tac_pw_lowercase: 0,\n    tac_pw_numbers: 0,\n    tac_pw_same: 0,\n    tac_pw_special: 0,\n    tac_pw_uppercase: 0\n  }\n  data_old = {}\n\n  validation = new BehaviorSubject({})\n  loading = new BehaviorSubject(true)\n\n  constructor(\n    private service: SettingsService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  init(){\n    this.service.passpolicy_get().subscribe( data => {\n      console.log(data)\n      this.data = data.policy\n      this.data_old = this.makeClone(data.policy)\n      this.loading.next(false)\n    })\n  }\n\n  save(){\n    console.log(this.data)\n    this.loading.next(false)\n    if (JSON.stringify(this.data) == JSON.stringify(this.data_old)){\n      this.toastr.warning('No Changes Detected!')\n      this.loading.next(false)\n      return;\n    }\n\n    let data = this.makeClone(this.data)\n\n    console.log(data)\n\n    data.api_pw_lowercase+= 0;\n    data.api_pw_numbers+= 0;\n    data.api_pw_same+= 0;\n    data.api_pw_special+= 0;\n    data.api_pw_uppercase+= 0;\n    data.tac_pw_lowercase+= 0;\n    data.tac_pw_numbers+= 0;\n    data.tac_pw_same+= 0;\n    data.tac_pw_special+= 0;\n    data.tac_pw_uppercase+= 0;\n\n    this.service.passpolicy_post(data).subscribe( data => {\n      console.log(data)\n      this.validation.next(data.error.validation)\n      if (data.error.status){\n        this.loading.next(false)\n        return\n      }\n      this.toastr.success('Changes Saved!')\n      this.init()\n      this.loading.next(false)\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n// NgBootstrap\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PortletModule } from '../../../partials/content/general/portlet/portlet.module';\nimport { ClockModule } from '../../../partials/layout/tacgui/_fields/clock/clock.module'\nimport { PagesModule } from '../../pages.module'\n\nimport { TimeComponent } from './time/time.component';\nimport { HaComponent } from './ha/ha.component';\nimport { NetworkComponent } from './network/network.component';\nimport { LoggingComponent } from './logging/logging.component';\nimport { SmtpComponent } from './smtp/smtp.component';\nimport { PasspolicyComponent } from './passpolicy/passpolicy.component';\n\n@NgModule({\n  declarations: [\n    TimeComponent,\n    HaComponent,\n    NetworkComponent,\n    LoggingComponent,\n    SmtpComponent,\n    PasspolicyComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    ClockModule,\n    PortletModule,\n    PagesModule,\n    RouterModule.forChild([\n      {\n        path: 'time',\n        component: TimeComponent\n      },\n      {\n        path: 'ha',\n        component: HaComponent\n      },\n      {\n        path: 'network',\n        component: NetworkComponent\n      },\n      {\n        path: 'logging',\n        component: LoggingComponent\n      },\n      {\n        path: 'smtp',\n        component: SmtpComponent\n      },\n      {\n        path: 'passpolicy',\n        component: PasspolicyComponent\n      },\n    ]),\n  ],\n})\nexport class SettingsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, first } from 'rxjs/operators';\n\nconst API_URL = 'api/settings/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  constructor(private http: HttpClient) {}\n\n  time_get() {\n    return this.http.get<any>(API_URL + 'time/',)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n  time_status() {\n    return this.http.get<any>(API_URL + 'time/status/',)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n  time_post(settings:{}) {\n    return this.http.post<any>(API_URL + 'time/', settings)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  passpolicy_get() {\n    return this.http.get<any>(API_URL + 'pwpolicy/',)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  passpolicy_post(settings:{}) {\n    return this.http.post<any>(API_URL + 'pwpolicy/', settings)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  network_get(inter:string) {\n    const params = new HttpParams()\n    .set('interface', inter);\n    return this.http.get<any>(API_URL + 'network/interface/', {params})\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  network_post(settings:{}) {\n    return this.http.post<any>(API_URL + 'network/interface/', settings)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  smtp_get() {\n    return this.http.get<any>(API_URL + 'smtp/')\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  smtp_test(smtp_test_email:string) {\n    return this.http.post<any>(API_URL + 'smtp/test/', { smtp_test_email } )\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  smtp_post(settings:{}) {\n    return this.http.post<any>(API_URL + 'smtp/', settings)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n\n  del_reports(settings:{}, urlType:string = 'api') {\n    let url = (urlType == 'api') ? 'api/logging/delete/' : 'api/tacacs/reports/delete/'\n    return this.http.post<any>(url, settings)\n      .pipe(\n        first(),\n        map( (data) => {\n          return data\n        } )\n      )\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <kt-portlet [class]=\\\"(loading | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <h5>General Settings</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>SMTP Servers list</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.smtp_servers }\\\"\\n                  [(ngModel)]=\\\"data.smtp_servers\\\" placeholder=\\\"Servers list\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.smtp_servers;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\">specify main and backup SMTP servers, e.g. <i>smtp1.example.com;smtp2.example.com</i></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label style=\\\"width: 100%\\\">SMTP authentication</label>\\n              <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.smtp_auth\\\"> Enable\\n\\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t\\t</label>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>SMTP Server Port</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.smtp_port }\\\"\\n                  [(ngModel)]=\\\"data.smtp_port\\\" placeholder=\\\"Port\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.smtp_port;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label style=\\\"width: 100%\\\">SMTP Secure</label>\\n    \\t\\t\\t\\t\\t\\t<select class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"data.smtp_secure\\\">\\n                  <option value=\\\"\\\">None</option>\\n                  <option value=\\\"ssl\\\">SSL</option>\\n                  <option value=\\\"tls\\\">TLS</option>\\n    \\t\\t\\t\\t\\t\\t</select>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"data.smtp_auth\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>SMTP Username</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.smtp_username }\\\"\\n                  [(ngModel)]=\\\"data.smtp_username\\\" placeholder=\\\"SMTP Username\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.smtp_username;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label style=\\\"width: 100%\\\">SMTP Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.smtp_password }\\\"\\n                  [(ngModel)]=\\\"data.smtp_password\\\" placeholder=\\\"SMTP Password\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.smtp_password;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>From (Sender Address)</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.smtp_from }\\\"\\n                  [(ngModel)]=\\\"data.smtp_from\\\" placeholder=\\\"From (Sender Address)\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.smtp_from;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"accordion accordion-light  accordion-toggle-arrow\\\" >\\n          <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">\\n                  <div class=\\\"card-title collapsed\\\" [ngClass]=\\\"{ collapsed: !notCollapsedMS }\\\" data-toggle=\\\"collapse\\\" (click)=\\\"notCollapsedMS = !notCollapsedMS\\\"\\n                          [attr.aria-expanded]=\\\"!notCollapsedMS\\\">Advanced Settings</div>\\n              </div>\\n              <div [ngbCollapse]=\\\"!notCollapsedMS\\\">\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-6\\\">\\n                        <div class=\\\"form-group\\\">\\n              \\t\\t\\t\\t\\t\\t<label style=\\\"width: 100%\\\">TLS Auto</label>\\n                          <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n            \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"data.smtp_autotls\\\"> Enable\\n            \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n            \\t\\t\\t\\t\\t\\t\\t</label>\\n              \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\">by default disabled</span>\\n                        </div>\\n                      </div>\\n                    </div>\\n                  </div>\\n              </div>\\n          </div>\\n        </div>\\n\\n\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loading | async) }\\\"\\n      [disabled]=\\\"(loading | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n\\n<br>\\n<br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Send test message</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>Test Email</label>\\n  \\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.smtp_test_email }\\\"\\n                  [(ngModel)]=\\\"smtp_test_email\\\" placeholder=\\\"Email Address\\\">\\n                  <!-- is-invalid -->\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.smtp_test_email;\\\">{{message}}</p>\\n              </div>\\n  \\t\\t\\t\\t\\t\\t<span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n        <button class=\\\"btn btn-warning btn-elevate btn-sm\\\"\\n          (click)=\\\"send()\\\"\\n          [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loading_check | async) }\\\"\\n          [disabled]=\\\"(loading_check | async)\\\">Send</button>&nbsp;\\n          <hr>\\n          <pre>{{send_status}}</pre>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9zZXR0aW5ncy9zbXRwL3NtdHAuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//Service\nimport { SettingsService } from '../settings.service'\n\n@Component({\n  selector: 'kt-smtp',\n  templateUrl: './smtp.component.html',\n  styleUrls: ['./smtp.component.scss']\n})\nexport class SmtpComponent implements OnInit {\n\n  data = {\n    smtp_auth: 1,\n    smtp_autotls: 0,\n    smtp_from: \"\",\n    smtp_password: \"\",\n    smtp_port: 25,\n    smtp_secure: \"\",\n    smtp_servers: \"\",\n    smtp_username: \"\",\n  }\n  data_old = {\n    smtp_password: ''\n  }\n\n  smtp_test_email=''\n  send_status=''\n\n  validation = new BehaviorSubject({})\n  loading = new BehaviorSubject(true)\n\n  constructor(\n    private service: SettingsService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  init(){\n    this.service.smtp_get().subscribe( data => {\n      console.log(data)\n      this.data = data.smtp\n      this.data_old = this.makeClone(data.smtp)\n      this.loading.next(false)\n    })\n  }\n\n  save(){\n    console.log(this.data)\n    this.loading.next(true)\n    if (JSON.stringify(this.data) == JSON.stringify(this.data_old)){\n      this.toastr.warning('No Changes Detected!')\n      this.loading.next(false)\n      return;\n    }\n\n    let data = this.makeClone(this.data)\n    data.smtp_auth += 0\n    data.smtp_autotls += 0\n    if (data.smtp_password == this.data_old.smtp_password) delete data.smtp_password\n\n    console.log(data)\n\n    this.service.smtp_post(data).subscribe( data => {\n      console.log(data)\n      this.validation.next(data.error.validation)\n      if (data.error.status){\n        this.loading.next(false)\n        return\n      }\n      this.toastr.success('Changes Saved!')\n      this.init()\n      this.loading.next(false)\n    })\n  }\n\n  send(){\n    this.service.smtp_test(this.smtp_test_email).subscribe( data => {\n      console.log(data)\n      this.validation.next(data.error.validation)\n      if (data.error.status){\n        this.loading.next(false)\n        return\n      }\n      this.send_status = data.result\n    })\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <kt-portlet [class]=\\\"(loading | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <h5>General Settings</h5>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <kt-field-general-list [data]=\\\"data.timezone\\\"\\n                [params]=\\\"list.timezones\\\"\\n                [errors]=\\\"(validation | async)?.timezone\\\"\\n                (returnData)=\\\"setTimezone($event)\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.timezone }\\\" >\\n              </kt-field-general-list>\\n            </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n            <div class=\\\"form-group\\\">\\n              <label style=\\\"width: 100%\\\">Current Time</label>\\n              <kt-clock></kt-clock>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <div class=\\\"form-group\\\">\\n  \\t\\t\\t\\t\\t\\t<label>NTP Server list</label>\\n  \\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" [(ngModel)]=\\\"data.ntp_list\\\" rows=\\\"3\\\"></textarea>\\n  \\t\\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loading | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-success btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loading | async) }\\\"\\n      [disabled]=\\\"(loading | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n<br>\\n<br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-9\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">NTP Status check</h5>\\n        <pre>{{check_status}}</pre>\\n        <button class=\\\"btn btn-warning btn-elevate btn-sm\\\"\\n          (click)=\\\"check()\\\"\\n          [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loading_check | async) }\\\"\\n          [disabled]=\\\"(loading_check | async)\\\">Check</button>&nbsp;\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL2d1aS9zZXR0aW5ncy90aW1lL3RpbWUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\n//Service\nimport { SettingsService } from '../settings.service'\n\n@Component({\n  selector: 'kt-time',\n  templateUrl: './time.component.html',\n  styleUrls: ['./time.component.scss']\n})\nexport class TimeComponent implements OnInit {\n\n  list = {\n    timezones: {\n      multiple: false,\n      title: 'Timezone',\n      title_sidebar: 'Timezones List',\n      search: true,\n      apiurl: 'api/settings/time/timezones/',\n    }\n  }\n  data = {\n    timezone: [],\n    ntp_list: ''\n  }\n  data_old = {\n    timezone: [],\n    ntp_list: ''\n  }\n\n  validation = new BehaviorSubject({})\n  loading = new BehaviorSubject(true)\n  loading_check = new BehaviorSubject(false)\n  check_status = ''\n\n\n  constructor(\n    private service: SettingsService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init(){\n    this.service.time_get().subscribe( data => {\n      // console.log(data)\n      this.data = data.time\n      this.data_old = this.makeClone(data.time)\n      this.loading.next(false)\n    })\n  }\n\n  setTimezone(data){\n    this.data.timezone = data\n  }\n\n  makeClone(src){\n    return JSON.parse(JSON.stringify(src));\n  }\n\n  save(){\n    console.log(this.data)\n    this.loading.next(false)\n    if (JSON.stringify(this.data) == JSON.stringify(this.data_old)){\n      this.toastr.warning('No Changes Detected!')\n      this.loading.next(false)\n      return;\n    }\n\n    let data = this.makeClone(this.data)\n    data.timezone = (data.timezone[0]) ? data.timezone[0].id : 0;\n\n    console.log(data)\n\n    this.service.time_post(data).subscribe( data => {\n      console.log(data)\n      this.validation.next(data.error.validation)\n      if (data.error.status){\n        this.loading.next(false)\n        return\n      }\n      this.toastr.success('Changes Saved!')\n      this.init()\n      this.loading.next(false)\n    })\n  }\n\n  check(){\n    this.loading_check.next(true)\n    this.service.time_status().subscribe( data => {\n      this.check_status = data.output\n      this.loading_check.next(false)\n    })\n  }\n\n}\n"],"sourceRoot":""}