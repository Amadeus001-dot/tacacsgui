{"version":3,"sources":["webpack:///./src/app/views/pages/tacacs/config/apply/apply.component.html","webpack:///./src/app/views/pages/tacacs/config/apply/apply.component.scss","webpack:///./src/app/views/pages/tacacs/config/apply/apply.component.ts","webpack:///./src/app/views/pages/tacacs/config/apply/apply.service.ts","webpack:///./src/app/views/pages/tacacs/config/config.module.ts","webpack:///./src/app/views/pages/tacacs/config/global/global.component.html","webpack:///./src/app/views/pages/tacacs/config/global/global.component.scss","webpack:///./src/app/views/pages/tacacs/config/global/global.component.ts","webpack:///./src/app/views/pages/tacacs/config/global/global.service.ts","webpack:///./src/app/views/partials/layout/tacgui/_pipes/safe.pipe.ts"],"names":[],"mappings":"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","file":"config-config-module.8c8e8739a87257f12789.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <kt-portlet>\\n      <kt-portlet-body>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-3 text-center\\\">\\n            <button class=\\\"btn btn-success btn-taller\\\" (click)=\\\"test()\\\" style=\\\"min-width: 100px;\\\">\\n              <i class=\\\"fa fa-cogs\\\"></i> Test\\n            </button>\\n            <br>\\n            <br>\\n            <button class=\\\"btn btn-warning btn-taller\\\" (click)=\\\"apply()\\\" style=\\\"min-width: 100px;\\\">\\n              <i class=\\\"fa fa-save\\\"></i> Apply\\n            </button>\\n            <br>\\n            <br>\\n            <label class=\\\"kt-checkbox kt-checkbox--bold kt-checkbox--brand\\\">\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"backup\\\"> Make backup after applying\\n\\t\\t\\t\\t\\t\\t\\t<span></span>\\n\\t\\t\\t\\t\\t\\t</label>\\n          </div>\\n          <div class=\\\"col-9\\\">\\n            <div class=\\\"kt-timeline-v2\\\">\\n      \\t\\t\\t\\t<div class=\\\"kt-timeline-v2__items  kt-padding-top-25 kt-padding-bottom-30\\\">\\n      \\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item\\\">\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-cricle\\\">\\n      \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-genderless kt-font-success\\\">\\n                    </i>\\n      \\t\\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-text  kt-padding-top-5\\\">No Changes Detected</div>\\n      \\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item\\\">\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-cricle\\\">\\n      \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-genderless\\\"\\n                      [ngClass]=\\\"{ 'kt-font-success' : (ts | async) == 's', 'kt-font-danger' : (ts | async) == 'e', 'kt-font-default' : (ts | async) == '' }\\\">\\n                    </i>\\n      \\t\\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-text  kt-padding-top-5\\\">\\n                    <h4>Test Configuration</h4>\\n      \\t\\t\\t\\t\\t\\t\\t{{test_result | async}}\\n      \\t\\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t\\t\\t</div>\\n                <div class=\\\"kt-timeline-v2__item\\\">\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-cricle\\\">\\n      \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-genderless\\\"\\n                      [ngClass]=\\\"{ 'kt-font-success' : (aps | async) == 's', 'kt-font-danger' : (aps | async) == 'e', 'kt-font-default' : (aps | async) == '' }\\\">\\n                    </i>\\n      \\t\\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-text  kt-padding-top-5\\\">\\n                    <h4>Apply Configuration</h4>\\n      \\t\\t\\t\\t\\t\\t\\t{{apply_result | async}}\\n      \\t\\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t\\t\\t</div>\\n                <div class=\\\"kt-timeline-v2__item\\\">\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-cricle\\\">\\n      \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fa fa-genderless\\\"></i>\\n      \\t\\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t\\t\\t\\t<div class=\\\"kt-timeline-v2__item-text  kt-padding-top-5\\\"></div>\\n      \\t\\t\\t\\t\\t</div>\\n      \\t\\t\\t  </div>\\n            </div>\\n          </div>\\n        </div>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<pre class=\\\"tac_config\\\"><div *ngFor=\\\"let line of (_fullConfig | async);\\\" class=\\\"line\\\" [innerHTML]=\\\"line | safe: 'html'\\\"></div></pre>\\n\"","module.exports = \".tac_config {\\n  background-color: #1e1e2d;\\n  color: #fff;\\n  counter-reset: line;\\n  padding: 0px;\\n  border: 0px;\\n  border-radius: 0px; }\\n\\n.tac_config div.line:nth-child(odd) {\\n  background-color: #1a1a27; }\\n\\ndiv.line {\\n  counter-increment: line; }\\n\\ndiv.line::before {\\n  content: counter(line);\\n  min-width: 33px;\\n  text-align: center;\\n  padding-left: 5px;\\n  margin-right: 7px;\\n  border-right: 1px solid;\\n  display: inline-table; }\\n\\nspan.tac-comment {\\n  color: #9093ac; }\\n\\nspan.tac-attr {\\n  color: #ffb822; }\\n\\nspan.tac-param {\\n  color: #0abb87; }\\n\\nspan.tac-object {\\n  color: #fd397a; }\\n\\nspan.tac-val {\\n  color: #5d78ff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2tlbGV0b24vc3JjL2FwcC92aWV3cy9wYWdlcy90YWNhY3MvY29uZmlnL2FwcGx5L2FwcGx5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQXlCO0VBQ3pCLFdBQVc7RUFFWCxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSx5QkFBeUIsRUFBQTs7QUFHM0I7RUFDRSx1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSxzQkFBc0I7RUFDdEIsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLHVCQUF1QjtFQUN2QixxQkFBcUIsRUFBQTs7QUFHdkI7RUFDRSxjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsY0FBYyxFQUFBOztBQUVoQjtFQUNFLGNBQWMsRUFBQTs7QUFFaEI7RUFDRSxjQUFjLEVBQUE7O0FBRWhCO0VBQ0UsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvcGFnZXMvdGFjYWNzL2NvbmZpZy9hcHBseS9hcHBseS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWNfY29uZmlnIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUxZTJkO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIC8vIHBhZGRpbmc6IDE1cHg7XHJcbiAgY291bnRlci1yZXNldDogbGluZTtcclxuICBwYWRkaW5nOiAwcHg7XHJcbiAgYm9yZGVyOiAwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMHB4O1xyXG59XHJcblxyXG4udGFjX2NvbmZpZyBkaXYubGluZTpudGgtY2hpbGQob2RkKSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFhMWEyNztcclxufVxyXG5cclxuZGl2LmxpbmUge1xyXG4gIGNvdW50ZXItaW5jcmVtZW50OiBsaW5lO1xyXG59XHJcblxyXG5kaXYubGluZTo6YmVmb3JlIHtcclxuICBjb250ZW50OiBjb3VudGVyKGxpbmUpO1xyXG4gIG1pbi13aWR0aDogMzNweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiA3cHg7XHJcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQ7XHJcbiAgZGlzcGxheTogaW5saW5lLXRhYmxlO1xyXG59XHJcblxyXG5zcGFuLnRhYy1jb21tZW50IHtcclxuICBjb2xvcjogIzkwOTNhYztcclxufVxyXG5zcGFuLnRhYy1hdHRyIHtcclxuICBjb2xvcjogI2ZmYjgyMjtcclxufVxyXG5zcGFuLnRhYy1wYXJhbSB7XHJcbiAgY29sb3I6ICMwYWJiODc7XHJcbn1cclxuc3Bhbi50YWMtb2JqZWN0IHtcclxuICBjb2xvcjogI2ZkMzk3YTtcclxufVxyXG5zcGFuLnRhYy12YWwge1xyXG4gIGNvbG9yOiAjNWQ3OGZmO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\nimport { ApplyService } from './apply.service'\n\n@Component({\n  selector: 'kt-apply',\n  templateUrl: './apply.component.html',\n  styleUrls: ['./apply.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ApplyComponent implements OnInit {\n\n  ts = new BehaviorSubject('')\n  aps = new BehaviorSubject('')\n  test_result = new BehaviorSubject('')\n  apply_result = new BehaviorSubject('')\n  _fullConfig = new BehaviorSubject([])\n\n  backup:boolean = true;\n\n  constructor(\n    private service : ApplyService\n  ) { }\n\n  ngOnInit() {\n    this.service.get().subscribe(data => {\n      console.log(data)\n      this._fullConfig.next([].concat(\n        data.spawnd,\n        data.tac_general,\n        data.tac_mavis,\n        data.tac_acl,\n        data.tac_devGrps,\n        data.tac_devices,\n        data.tac_usrGrps,\n        data.tac_users,\n        ['}##END GLOBAL CONFIGURATION']\n      ))\n    })\n  }\n\n  test(){\n    this.clearStatus();\n    this.service.test_c().subscribe(data => {\n      this.testReturn(data.confTest)\n    })\n  }\n  testReturn(result){\n    if (result.error) {\n      this.ts.next('e')\n    } else this.ts.next('s')\n    this.test_result.next(result.message)\n  }\n  apply(){\n    this.clearStatus();\n    this.service.test_c().subscribe(data => {\n      this.testReturn(data.confTest)\n      if (!data.confTest.error){\n        this.service.apply_c( this.backup ).subscribe(data => {\n          console.log(data)\n          this.applyReturn(data.applyStatus)\n        })\n        // this.applyReturn()\n      }\n    })\n  }\n\n  applyReturn(result){\n    if (result.error) {\n      this.aps.next('e')\n    } else this.aps.next('s')\n    this.apply_result.next(result.message)\n  }\n\n  clearStatus(){\n    this.ts.next('')\n    this.aps.next('')\n    this.test_result.next('Loading...')\n    this.apply_result.next('')\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nconst API_URL = 'api/tacacs/config/apply/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApplyService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get() {\r\n    let params = new HttpParams().set('html', 'true');\r\n    return this.http.get<any>('api/tacacs/config/generate/', { params: params })\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n  test_c() {\r\n    let params = new HttpParams().set('contentType', 'json').set('confTest', 'on');\r\n    return this.http.get<any>(API_URL, { params: params })\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n  apply_c(backup: boolean = false) {\r\n    // contentType: json\r\n    // confTest: on\r\n    // confSave: yes\r\n    // doBackup: false\r\n    let params = new HttpParams().set('contentType', 'json').set('confTest', 'on')\r\n      .set('confSave', 'yes').set('doBackup', (backup) ? '1' : '0');\r\n    return this.http.get<any>(API_URL, { params: params })\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n// NgBootstrap\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { PagesModule } from '../../pages.module'\n\nimport { PortletModule } from '../../../partials/content/general/portlet/portlet.module';\n\nimport { SafePipe } from '../../../partials/layout/tacgui/_pipes/safe.pipe';\n\n//Components\nimport { ApplyComponent } from './apply/apply.component';\nimport { GlobalComponent } from './global/global.component';\n\n@NgModule({\n  declarations: [\n    ApplyComponent,\n    GlobalComponent,\n    SafePipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n    PagesModule,\n    PortletModule,\n\n    RouterModule.forChild([\n      {\n        path: 'global',\n        component: GlobalComponent\n      },\n      {\n        path: 'apply',\n        component: ApplyComponent\n      },\n    ]),\n  ]\n})\nexport class ConfigModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <kt-portlet>\\n      <kt-portlet-body>\\n        <h4>Start/Stop/Reload Tacacs Daemon</h4>\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-8\\\">\\n            <div class=\\\"btn-group btn-group-sm\\\" role=\\\"group\\\" aria-label=\\\"...\\\">\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"start()\\\"\\n                  class=\\\"btn btn-outline-info\\\" ngbPopover=\\\"Start\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-play\\\"></i>\\n                </button>\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"stop()\\\"\\n                  class=\\\"btn btn-outline-info\\\" ngbPopover=\\\"Stop\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-stop\\\"></i>\\n                </button>\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"reload()\\\"\\n                  class=\\\"btn btn-outline-info\\\"ngbPopover=\\\"Restart\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-redo-alt\\\"></i>\\n                </button>\\n                <button type=\\\"button\\\"\\n                  (click)=\\\"info()\\\"\\n                  class=\\\"btn btn-outline-info\\\" ngbPopover=\\\"Info\\\"\\n                  triggers=\\\"mouseenter:mouseleave\\\">\\n                  <i class=\\\"fa fa-info\\\"></i>\\n                </button>\\n            </div>\\n          </div>\\n        </div>\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <label>Current Status</label>\\n            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" [value]=\\\"(tacacsStatusMessage | async )\\\" disabled>\\n          </div>\\n        </div>\\n      </kt-portlet-body>\\n    </kt-portlet>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9 col-lg-7\\\">\\n    <kt-portlet [class]=\\\"(loadingForm | async) ? 'tacgui-blockui-portlet' : ''\\\">\\n      <kt-portlet-body>\\n        <h4>Global Settings</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <div class=\\\"form-group row\\\">\\n  \\t\\t\\t\\t\\t\\t<label class=\\\"col-2 col-form-label\\\">Listening Port</label>\\n  \\t\\t\\t\\t\\t\\t<div class=\\\"col-3\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.port }\\\"\\n                  [(ngModel)]=\\\"params.port\\\">\\n                <div class=\\\"invalid-feedback\\\">\\n                  <p *ngFor=\\\"let message of (validation | async)?.port;\\\">{{message}}</p>\\n                </div>\\n                <span class=\\\"form-text text-muted\\\"></span>\\n  \\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n          <h4>Authentication</h4>\\n          <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label>Authentication Max Attempt</label>\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.max_attempts }\\\"\\n                  [(ngModel)]=\\\"params.max_attempts\\\">\\n                  <div class=\\\"input-group-append\\\">\\n    \\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                      ngbPopover=\\\"that parameter limits the number of Password: prompts per TACACS+ session at login, default: 1\\\"\\n                      triggers=\\\"mouseenter:mouseleave\\\">\\n                      <i class=\\\"fa fa-info\\\"></i>\\n                    </button>\\n    \\t\\t\\t\\t\\t\\t\\t</div>\\n                </div>\\n\\n                <div class=\\\"invalid-feedback\\\">\\n                  <p *ngFor=\\\"let message of (validation | async)?.max_attempts;\\\">{{message}}</p>\\n                </div>\\n                <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label>Backoff Timer</label>\\n                <div class=\\\"input-group\\\">\\n    \\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.backoff }\\\"\\n                  [(ngModel)]=\\\"params.backoff\\\">\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                      ngbPopover=\\\"tacacs will wait for seconds before returning a final authentication failure (password incorrect) message, default: 1 second\\\"\\n                      triggers=\\\"mouseenter:mouseleave\\\">\\n                      <i class=\\\"fa fa-info\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"invalid-feedback\\\">\\n                  <p *ngFor=\\\"let message of (validation | async)?.backoff;\\\">{{message}}</p>\\n                </div>\\n                <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n            <div class=\\\"col-4\\\">\\n              <div class=\\\"form-group\\\">\\n    \\t\\t\\t\\t\\t\\t<label>Separation Tag</label>\\n                <div class=\\\"input-group\\\">\\n                  <select class=\\\"form-control form-control-sm\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.separation_tag }\\\" [(ngModel)]=\\\"params.separation_tag\\\">\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"*\\\">*</option>\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"@\\\">@</option>\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"/\\\">/</option>\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"/\\\">%</option>\\n      \\t\\t\\t\\t\\t\\t\\t<option value=\\\"$\\\">$</option>\\n      \\t\\t\\t\\t\\t\\t</select>\\n    \\t\\t\\t\\t\\t\\t\\t<!-- <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\n                  [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.separation_tag }\\\"\\n                  [(ngModel)]=\\\"params.separation_tag\\\"> -->\\n                  <div class=\\\"input-group-append\\\">\\n                    <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                      ngbPopover=\\\"separation tag used to separate users and groups, by default *\\\"\\n                      triggers=\\\"mouseenter:mouseleave\\\">\\n                      <i class=\\\"fa fa-info\\\"></i>\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\\"invalid-feedback\\\">\\n                  <p *ngFor=\\\"let message of (validation | async)?.separation_tag;\\\">{{message}}</p>\\n                </div>\\n                <span class=\\\"form-text text-muted\\\"></span>\\n    \\t\\t\\t\\t\\t</div>\\n            </div>\\n          </div>\\n        <h4>Miscellaneous</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label style=\\\"width:100%\\\">Skip conflicting groups</label>\\n              <span class=\\\"kt-switch kt-switch--outline kt-switch--success\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<label>\\n  \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"params.skip_conflicting_groups\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n  \\t\\t\\t\\t\\t\\t\\t</label>\\n  \\t\\t\\t\\t\\t\\t</span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label style=\\\"width:100%\\\">Skip missing groups</label>\\n              <span class=\\\"kt-switch kt-switch--outline kt-switch--success\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<label>\\n  \\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"checkbox\\\" [(ngModel)]=\\\"params.skip_missing_groups\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t<span></span>\\n  \\t\\t\\t\\t\\t\\t\\t</label>\\n  \\t\\t\\t\\t\\t\\t</span>\\n            </div>\\n          </div>\\n        </div>\\n        <h4>Limits and Timeouts</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Connection Timeout</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.connection_timeout }\\\"\\n                [(ngModel)]=\\\"params.connection_timeout\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                    ngbPopover=\\\"terminate a connection to a NAS after an idle period of at least s seconds, default: 600 seconds\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\">\\n                    <i class=\\\"fa fa-info\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.connection_timeout;\\\">{{message}}</p>\\n              </div>\\n              <span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Context Timeout</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.context_timeout }\\\"\\n                [(ngModel)]=\\\"params.context_timeout\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                    ngbPopover=\\\"clears context cache entries after s seconds of inactivity, default: 3600 seconds\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\">\\n                    <i class=\\\"fa fa-info\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.context_timeout;\\\">{{message}}</p>\\n              </div>\\n              <span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n        <h4>Syslog Settings</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-5\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Syslog server</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.syslog_ip }\\\"\\n                [(ngModel)]=\\\"params.syslog_ip\\\">\\n\\n              </div>\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.syslog_ip;\\\">{{message}}</p>\\n              </div>\\n              <span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Port</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.syslog_port }\\\"\\n                [(ngModel)]=\\\"params.syslog_port\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                    ngbPopover=\\\"udp port of syslog server, default 514\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\">\\n                    <i class=\\\"fa fa-info\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.syslog_port;\\\">{{message}}</p>\\n              </div>\\n              <span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n        <h4>Reports Settings</h4>\\n        <span class=\\\"text-danger\\\">be careful with those settings! it influences on log parser script!</span>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Authentication</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.authentication }\\\"\\n                [(ngModel)]=\\\"params.authentication\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                    ngbPopover=\\\"here you can set path to file on the server, command or syslog server ip and port, by default it used for Log Parser script\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\">\\n                    <i class=\\\"fa fa-info\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.authentication;\\\">{{message}}</p>\\n              </div>\\n              <span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Authorization</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.authorization }\\\"\\n                [(ngModel)]=\\\"params.authorization\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                    ngbPopover=\\\"here you can set path to file on the server, command or syslog server ip and port, by default it used for Log Parser script\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\">\\n                    <i class=\\\"fa fa-info\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.authorization;\\\">{{message}}</p>\\n              </div>\\n              <span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n          <div class=\\\"col-4\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Accounting</label>\\n              <div class=\\\"input-group\\\">\\n                <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\"\\n                [ngClass]=\\\"{ 'is-invalid' : (validation | async)?.accounting }\\\"\\n                [(ngModel)]=\\\"params.accounting\\\">\\n                <div class=\\\"input-group-append\\\">\\n                  <button class=\\\"btn btn-default btn-sm btn-icon\\\"\\n                    ngbPopover=\\\"here you can set path to file on the server, command or syslog server ip and port, by default it used for Log Parser script\\\"\\n                    triggers=\\\"mouseenter:mouseleave\\\">\\n                    <i class=\\\"fa fa-info\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n              <div class=\\\"invalid-feedback\\\">\\n                <p *ngFor=\\\"let message of (validation | async)?.accounting;\\\">{{message}}</p>\\n              </div>\\n              <span class=\\\"form-text text-muted\\\"></span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <h4>Manual Configuration\\n          <small>\\n            <i class=\\\"fa fa-info\\\"\\n            ngbPopover=\\\"that configuration will be added to the top of global configuration, after port listening settings\\\"\\n            triggers=\\\"mouseenter:mouseleave\\\">\\n            </i>\\n          </small>\\n        </h4>\\n        <span class=\\\"text-danger\\\">be careful with those settings! by default it influences on log parser script!</span>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-12\\\">\\n            <div class=\\\"form-group manual\\\">\\n\\t\\t\\t\\t\\t\\t<textarea rows=\\\"9\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"params.manual\\\" placeholder=\\\"Manual configuration\\\"></textarea>\\n\\t\\t\\t\\t\\t</div>\\n          </div>\\n        </div>\\n      </kt-portlet-body>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main\\\"></div>\\n      <div *ngIf=\\\"(loadingForm | async)\\\" class=\\\"tacgui-blockui-main-message kt-spinner kt-spinner--sm kt-spinner--success\\\"><span>Please wait...</span></div>\\n    </kt-portlet>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-11 offset-sm-1 offset-md-1 offset-lg-1\\\">\\n    <button class=\\\"btn btn-warning btn-elevate btn-sm\\\"\\n      (click)=\\\"save()\\\"\\n      [ngClass]=\\\"{ 'kt-spinner kt-spinner--right kt-spinner--sm kt-spinner--light' : (loadingForm | async) }\\\"\\n      [disabled]=\\\"(loadingForm | async)\\\">Save</button>&nbsp;\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL3BhZ2VzL3RhY2Fjcy9jb25maWcvZ2xvYmFsL2dsb2JhbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n//RXJS\nimport { BehaviorSubject } from 'rxjs';\n//Toastr\nimport { ToastrService } from 'ngx-toastr';\n\nimport { GlobalService } from './global.service'\n\nconst GlobalTacacs = {\n  port: 49,\n  max_attempts: 1,\n  backoff: 1,\n  separation_tag: \"*\",\n  skip_conflicting_groups: 1,\n  skip_missing_groups: 1,\n}\n\n@Component({\n  selector: 'kt-global',\n  templateUrl: './global.component.html',\n  styleUrls: ['./global.component.scss']\n})\nexport class GlobalComponent implements OnInit {\n\n  validation = new BehaviorSubject({})\n  loadingForm = new BehaviorSubject(true)\n  tacacsStatusMessage = new BehaviorSubject('')\n  params = GlobalTacacs\n  params_old = ''\n\n  constructor(\n    private toastr:ToastrService,\n    private t_service: GlobalService\n  ) { }\n\n  ngOnInit() {\n    this.init()\n  }\n\n  init() {\n    this.t_service.get().subscribe(data =>{\n      this.params = data\n      this.params_old = JSON.stringify(data)\n      this.loadingForm.next(false)\n    })\n    this.info()\n  }\n\n  save(){\n    this.loadingForm.next(true)\n    if (this.params_old == JSON.stringify(this.params)){\n      this.toastr.warning('No Changes Detected!')\n      this.loadingForm.next(false)\n      return;\n    }\n    this.t_service.save(this.params).subscribe(data =>{\n      if (data.tglobal_update) {\n        this.toastr.success('Settings Saved')\n        this.init()\n        return\n      }\n      this.toastr.error('Unexpcted Error')\n      this.init()\n      return\n\n    })\n  }\n\n  //daemon\n  start(){\n    this.tacacsStatusMessage.next('Loading...')\n    this.t_service.start().subscribe(data =>{\n      // this.tacacsStatusMessage.next(data.tacacsStatusMessage)\n      this.info()\n    })\n  }\n  stop(){\n    this.tacacsStatusMessage.next('Loading...')\n    this.t_service.stop().subscribe(data =>{\n      // this.tacacsStatusMessage.next(data.tacacsStatusMessage)\n      this.info()\n    })\n  }\n  reload(){\n    this.tacacsStatusMessage.next('Loading...')\n    this.t_service.reload().subscribe(data =>{\n      // this.tacacsStatusMessage.next(data.tacacsStatusMessage)\n      this.info()\n    })\n  }\n  info(){\n    this.tacacsStatusMessage.next('Loading...')\n    this.t_service.info().subscribe(data =>{\n      this.tacacsStatusMessage.next(data.tacacsStatusMessage)\n    })\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map, first } from 'rxjs/operators';\r\n\r\nconst API_URL = 'api/tacacs/config/global/edit/';\r\nconst API_URL_DAEMON = 'api/tacacs/config/daemon/';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  get() {\r\n    return this.http.get<any>(API_URL)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data.global_variables\r\n        } )\r\n      )\r\n  }\r\n\r\n  save(data:{}) {\r\n    return this.http.post<any>(API_URL, data)\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n\r\n  info() {\r\n    return this.http.post<any>(API_URL_DAEMON, {})\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n  start() {\r\n    return this.http.post<any>(API_URL_DAEMON, {action: 'start'})\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n  stop() {\r\n    return this.http.post<any>(API_URL_DAEMON, {action: 'stop'})\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n  reload() {\r\n    return this.http.post<any>(API_URL_DAEMON, {action: 'reload'})\r\n      .pipe(\r\n        first(),\r\n        map( (data) => {\r\n          return data\r\n        } )\r\n      )\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(protected sanitizer: DomSanitizer) {}\n\n public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\n    switch (type) {\n\t\t\tcase 'html': { return this.sanitizer.bypassSecurityTrustHtml(value)};\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\n\t\t}\n  }\n}\n"],"sourceRoot":""}